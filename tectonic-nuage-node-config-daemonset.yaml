# This ConfigMap is used to configure Nuage VSP configuration
kind: ConfigMap
apiVersion: v1
metadata:
  name: nuage-node-config
  namespace: kube-system
data:
  # This will generate the required Nuage vsp-k8s.yaml
  # config on each slave node
  plugin_yaml_config: |
      # Path to Nuage kubeconfig
      kubeConfig: /etc/kubernetes/kubeconfig
      # Name of the enterprise in which pods will reside
      enterpriseName: kubernetes
      # Name of the domain in which pods will reside
      domainName: kubernetes
      # Name of the VSD user in admin group
      vsdUser: k8s-admin
      # REST server URL
      nuageMonRestServer: https://10.31.45.147:9443
      # Bridge name for the docker bridge
      dockerBridgeName: docker0
      # Certificate for connecting to the kubemon REST API
      nuageMonClientCert: /var/lib/kubelet/pki/kubelet-client.crt
      # Key to the certificate in restClientCert
      nuageMonClientKey: /var/lib/kubelet/pki/kubelet-client.key
      # CA certificate for verifying the master's rest server
      nuageMonServerCA: /etc/kubernetes/pki/ca.crt
      # Nuage vport mtu size
      interfaceMTU: 1460
      # Service CIDR
      serviceCIDR: 192.168.0.0/16
      # Logging level for the plugin
      # allowed options are: "dbg", "info", "warn", "err", "emer", "off"
      logLevel: dbg

  # This will generate the required Nuage CNI yaml configuration
  cni_yaml_config: |
      vrsendpoint: "/var/run/openvswitch/db.sock"
      vrsbridge: "alubr0"
      monitorinterval: 60
      cniversion: 0.2.0
      loglevel: "info"
      portresolvetimer: 60
      logfilesize: 1
      vrsconnectionchecktimer: 180
      mtu: 1450
      staleentrytimeout: 600
      host: "coreos"

---

# This manifest installs Nuage CNI plugins and network config on
# each worker node in a Tectonic cluster.
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: kube-nuage-cni
  namespace: kube-system
  labels:
    tier: node
    k8s-app: nuage
spec:
  selector:
    matchLabels:
      tier: node
      k8s-app: nuage
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        tier: node
        k8s-app: nuage
    spec:
      containers:
      - name: install-cni
        image: nuage/cni:v5.2.1
        command: ["/install-cni.sh"]
        args: ["nuage-cni-k8s", "is_coreos"]
        securityContext:
          privileged: true
        env:
        # Set the hostname based on the k8s node name.
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        # Nuage vsp-k8s.yaml config to install on each slave node.
        - name: NUAGE_VSP_CONFIG
          valueFrom:
            configMapKeyRef:
              name: nuage-node-config
              key: plugin_yaml_config
        # Nuage nuage-cni.yaml config to install on each slave node.
        - name: NUAGE_CNI_YAML_CONFIG
          valueFrom:
            configMapKeyRef:
              name: nuage-node-config
              key: cni_yaml_config
        # Nuage cluster network CIDR for iptables configuration
        - name: NUAGE_CLUSTER_NW_CIDR
          value: "70.70.0.0/16"
        volumeMounts:
        - name: cni-yaml-dir
          mountPath: /host/etc
        - name: var-run-dir
          mountPath: /var/run
        - name: cni-log-dir
          mountPath: /var/log
        - name: tectonic-var-dir
          mountPath: /host/var
        - name: host-cni-bin
          mountPath: /host/opt/cni/bin
        - name: cni-net-conf
          mountPath: /host/etc/cni/net.d
      hostNetwork: true
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      volumes:
        - name: cni-yaml-dir
          hostPath:
            path: /etc
        - name: var-run-dir
          hostPath:
            path: /var/run
        - name: cni-log-dir
          hostPath:
            path: /var/log
        - name: tectonic-var-dir
          hostPath:
            path: /var
        - name: host-cni-bin
          hostPath:
            path: /var/lib/cni/bin
        - name: cni-net-conf
          hostPath:
            path: /etc/kubernetes/cni/net.d
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
