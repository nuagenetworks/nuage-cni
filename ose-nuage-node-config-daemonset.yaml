# This ConfigMap is used to configure Nuage VSP configuration
kind: ConfigMap
apiVersion: v1
metadata:
  name: nuage-node-config
  namespace: kube-system
data:
  # This will generate the required Nuage vsp-openshift.yaml
  # config on each slave node
  plugin_yaml_config: |
      clientCert: /etc/origin/node/server.crt
      # The key to the certificate in clientCert above
      clientKey: /etc/origin/node/server.key
      # The certificate authority's certificate for the local kubelet.  Usually the
      # same as the CA cert used to create the client Cert/Key pair.
      CACert: /etc/origin/node/ca.crt
      # Name of the enterprise in which pods will reside
      enterpriseName: OpenShift
      # Name of the domain in which pods will reside
      domainName: OpenShift-domain
      # Name of the VSD user in admin group
      vsdUser: ose-admin
      # IP address and port number of master API server
      masterApiServer: https://10.31.45.147:8443
      # REST server URL 
      nuageMonRestServer: https://10.31.45.147:9443
      # Bridge name for the docker bridge
      dockerBridgeName: docker0
      # Certificate for connecting to the openshift monitor REST api
      nuageMonClientCert: /etc/origin/node/server.crt
      # Key to the certificate in restClientCert
      nuageMonClientKey: /etc/origin/node/server.key
      # CA certificate for verifying the master's rest server
      nuageMonServerCA: /etc/origin/node/ca.crt
      # Nuage vport mtu size
      interfaceMTU: 1450

  # This will generate the required Nuage CNI yaml configuration
  cni_yaml_config: |
      vrsendpoint: "/var/run/openvswitch/db.sock"
      vrsbridge: "alubr0"
      monitorinterval: 60
      cniversion: 0.2.0
      loglevel: "info"
      portresolvetimer: 60
      logfilesize: 1
      vrsconnectionchecktimer: 180
      mtu: 1450
      staleentrytimeout: 600

---

# This manifest installs Nuage CNI plugins and network config on
# each worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: nuage-cni-ds
  namespace: kube-system
  labels:
    k8s-app: nuage-cni-ds
spec:
  selector:
    matchLabels:
      k8s-app: nuage-cni-ds
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: nuage-cni-ds
    spec:
      hostNetwork: true
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
          operator: Exists
      containers:
        # This container installs Nuage CNI binaries
        # and CNI network config file on each node.
        - name: install-nuage-cni
          image: nuage/cni:v5.1.2
          command: ["/install-cni.sh"]
          args: ["nuage-cni-openshift", "is_rhel_server"]
          securityContext:
            privileged: true
          env:
            # Nuage vsp-openshift.yaml config to install on each slave node.
            - name: NUAGE_VSP_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: nuage-node-config
                  key: plugin_yaml_config
            # Nuage nuage-cni.yaml config to install on each slave node.
            - name: NUAGE_CNI_YAML_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: nuage-node-config
                  key: cni_yaml_config
            # Nuage cluster network CIDR for iptables configuration
            - name: NUAGE_CLUSTER_NW_CIDR
              value: "70.70.0.0/16"
          volumeMounts:
            - mountPath: /host/opt
              name: cni-bin-dir
            - mountPath: /host/etc
              name: cni-yaml-dir
            - mountPath: /var/run
              name: var-run-dir
            - mountPath: /var/log
              name: cni-log-dir
            - mountPath: /host/var
              name: atomic-var-dir
            - mountPath: /usr/share
              name: usr-share-dir
            - mountPath: /etc/origin
              name: node-config-dir
      volumes:
        - name: cni-bin-dir
          hostPath:
            path: /opt
        - name: cni-yaml-dir
          hostPath:
            path: /etc
        - name: var-run-dir
          hostPath:
            path: /var/run
        - name: cni-log-dir
          hostPath:
            path: /var/log
        - name: atomic-var-dir
          hostPath:
            path: /var
        - name: usr-share-dir
          hostPath:
            path: /usr/share
        - name: node-config-dir
          hostPath:
            path: /etc/origin

---

# This manifest installs Nuage VRS on
# each worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: nuage-vrs-ds
  namespace: kube-system
  labels:
    k8s-app: nuage-vrs-ds
spec:
  selector:
    matchLabels:
      k8s-app: nuage-vrs-ds
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: nuage-vrs-ds
    spec:
      hostNetwork: true
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
          operator: Exists
      containers:
        # This container installs Nuage VRS running as a 
        # container on each worker node
        - name: install-nuage-vrs
          image: nuage/vrs:v5.1.2
          securityContext:
            privileged: true
          env:
            # Configure parameters for VRS openvswitch file
            - name: NUAGE_ACTIVE_CONTROLLER
              value: "10.100.100.100"
            - name: NUAGE_STANDBY_CONTROLLER
              value: "10.100.100.101"
            - name: NUAGE_PLATFORM
              value: '"kvm, k8s"'
            - name: NUAGE_K8S_SERVICE_IPV4_SUBNET
              value: '172.30.0.0\/16'
            - name: NUAGE_NETWORK_UPLINK_INTF
              value: "eth0"
          volumeMounts:
            - mountPath: /var/run
              name: vrs-run-dir
            - mountPath: /var/log
              name: vrs-log-dir
            - mountPath: /sys/module
              name: sys-mod-dir
              readOnly: true
            - mountPath: /lib/modules
              name: lib-mod-dir
              readOnly: true
      volumes:
        - name: vrs-run-dir
          hostPath:
            path: /var/run
        - name: vrs-log-dir
          hostPath:
            path: /var/log
        - name: sys-mod-dir
          hostPath:
            path: /sys/module
        - name: lib-mod-dir
          hostPath:
            path: /lib/modules
